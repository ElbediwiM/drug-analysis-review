After you do docker run, it returns a URL for the uvicorn server running the API,
so you can use it to see if the container and API is working. Note that you need to build the docker image
specifically for production by specifying the region. Create a Makefile that provides aliases for
Terminal commands. Do Direnv reload after changing environment variables and use environment variables
in you Terminal commands.

Ingrain:
update file
push to Github branch.
then follow steps 3, 4, 5 of make file. Steps 1 and 2 are only run once. The steps before that are steps to run locally.

Only push folders and files

Do pip install -r requirements after pulling from main to install the requirements
so that your environment is updated with the packages they are using.
Make sure that you use the folder structure from Ben



For Mohammed's model, not that Sex is in the dataset but not used in the pipeline - not sure if it will still work

Why do we need a requirements.txt in the container?

Remember that in the command here docker run -it -e PORT=8000 -p 8080:8000 $IMAGE:dev, you firstly
started a new container from the built image with docker run, set
the PORT environment variable to 8000 inside the container, and told
Uvicorn that port 8080 on your local machine will be used to access port 8000 in the container,
so although Uvicorn will respond in the Terminal telling you you can access it with a localhost
url of 8000, you need an 8080 url - http://localhost:8080.

Mohammed is trying new models like XGBoost with Tom's smaller dataset.


Have a 5 medicines predicted - with the probability of them working.
Add a dropdown menu for the conditions
Remove other for the gender.
